<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="back.mapper.auto.AutoInfoMapper">
	 <!-- 이메일로 기존 정보 조회 -->
    <select id="selectByEmail" parameterType="String" resultType="back.model.auto.AutoInfo">
        SELECT * FROM AUTH_INFO
        WHERE AUTH_EMAIL = #{authemail}
        AND DEL_YN = 'N'
    </select>

    <!-- 새 인증정보 삽입 -->
    <insert id="insertAuthInfo" parameterType="back.model.auto.AutoInfo">
	    INSERT INTO AUTH_INFO (
	        AUTH_ID,
	        USERS_ID,
	        AUTH_EMAIL,
	        AUTH_EMAIL_VERIFIED,
	        AUTH_NUMBER,
	        CREATED_DT,
	        UPDATED_DT,
	        CREATE_ID,
	        UPDATE_ID,
	        DEL_YN
	    ) VALUES (
	        AUTH_INFO_SEQ.NEXTVAL,
	        #{user.usersId, jdbcType=VARCHAR},
	        #{authEmail, jdbcType=VARCHAR},
	        #{authEmailVerified, jdbcType=CHAR},
	        #{authNumber, jdbcType=VARCHAR},
	        SYSDATE,
	        SYSDATE,
	        #{createId, jdbcType=VARCHAR},
	        #{updateId, jdbcType=VARCHAR},
	        'N'
	    )
	</insert>

    <!-- 인증번호 업데이트 -->
    <update id="updateAuthNumber" parameterType="back.model.auto.AutoInfo">
        UPDATE AUTH_INFO
        SET AUTH_NUMBER = #{authNumber},
            UPDATED_DT = SYSDATE,
            UPDATE_ID = #{updateId}
        WHERE AUTH_EMAIL = #{authEmail}
        AND DEL_YN = 'N'
    </update>

    <!-- 인증 완료 처리 -->
    <update id="verifyAuthEmail" parameterType="String">
        UPDATE AUTH_INFO
        SET AUTH_EMAIL_VERIFIED = 'Y',
            UPDATED_DT = SYSDATE
        WHERE AUTH_EMAIL = #{email}
        AND DEL_YN = 'N'
    </update>
    <!-- 회원가입이 완료하면 AUTH_INFO테이블에 USERS_ID값 삽입합니다.-->
    <update id="updateUsersId" parameterType="map">
	    UPDATE AUTH_INFO
	    SET USERS_ID = #{usersId},
	        UPDATED_DT = SYSDATE
	    WHERE AUTH_EMAIL = #{email}
	      AND DEL_YN = 'N'
	</update>
</mapper>    