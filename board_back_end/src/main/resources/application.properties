spring.application.name=board_back_end
#내장 객체 쓴다.
server.port=8081 


#Oracle DB 연결 설정
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=dldmstlr
spring.datasource.password=1234
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#HikariCP 커넥션 풀 설정, DB접속 자원을 효율적으로 사용, 분배하고 유지, 줬다가 회수함.
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
#하나의 연결을 처리
spring.datasource.hikari.max-lifetime=600000 
spring.datasource.hikari.connection-timeout=30000

#log4jdbc 설정
spring.datasource.hikari.data-source-class=net.sf.log4jdbc.sql.jdbc4.DriverSpy
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
#xml을 다 등록이 되어있다. 자동 등록
mybatis.mapper-locations=classpath:mapper/**/*.xml
#풀 경로 적기 가능함
mybatis.type-aliases-package=back.model
#카멜케이스로 변환하기
mybatis.configuration.map-underscore-to-camel-case=true

spring.servlet.multipart.enabled=true
#최대 파일 크기
spring.servlet.multipart.max-file-size=10MB
#한번에 50MB
spring.servlet.multipart.max-request-size=50MB
#파일을 옮기는 단위
spring.servlet.multipart.file-size-threshold=1MB
spring.servlet.multipart.location=C:/

server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=false
#server.servlet.session.cookie.same-site=none
#server.servlet.session.cookie.secure=false

server.servlet.session.timeout=30m

myapp.apiBaseUrl=http://localhost:8081