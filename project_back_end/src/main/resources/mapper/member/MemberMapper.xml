<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="back.mapper.member.MemberMapper">

    <!-- 회원 전체 조회 -->
    <select id="selectAllMembers" resultType="back.model.user.User">
        SELECT * FROM USERS 
    </select>

    <!-- 회원 삭제 -->
    <delete id="deleteMemberById" parameterType="string">
        DELETE FROM USERS
        WHERE USER_ID = #{userId}
    </delete>

    <!-- 회원 단건 조회 -->
    <select id="selectUser" resultType="back.model.user.User">
        SELECT * FROM USERS WHERE USER_ID = #{userId, jdbcType=VARCHAR}
    </select>

    <!-- 회원 목록 조회 (페이지네이션) -->
	<select id="selectMembersByPage" resultType="back.model.user.User">
	  SELECT *
	  FROM users
	  WHERE 1 = 1
	    <if test="searchType != null and searchKeyword != null">
	      <choose>
	        <when test="searchType == 'username'">
	          AND username LIKE '%' || #{searchKeyword} || '%'
	        </when>
	        <when test="searchType == 'email'">
	          AND email LIKE '%' || #{searchKeyword} || '%'
	        </when>
	      </choose>
	    </if>
	
	    <if test="startDate != null and endDate != null">
	      AND create_dt BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
	    </if>
	
	  <choose>
	    <when test="sortField != null and sortOrder != null">
	      ORDER BY 
	        <choose>
	          <when test="sortField == 'username'">username</when>
	          <when test="sortField == 'email'">email</when>
	          <when test="sortField == 'create_dt'">create_dt</when>
	          <otherwise>create_dt</otherwise>
	        </choose>
	        <choose>
	          <when test="sortOrder == 'ASC'">ASC</when>
	          <otherwise>DESC</otherwise>
	        </choose>
	    </when>
	    <otherwise>
	      ORDER BY create_dt DESC
	    </otherwise>
	  </choose>
	
	  OFFSET #{startRow, jdbcType=INTEGER} ROWS
	  FETCH NEXT #{pageSize, jdbcType=INTEGER} ROWS ONLY
	</select>

    <!-- 전체 회원 수 조회 -->
    <select id="selectTotalMemberCount" resultType="int">
        SELECT COUNT(*) FROM USERS
    </select>

    <!-- 검색된 회원 목록 조회 -->
	<select id="searchMembersByKeyword" resultType="back.model.user.User" parameterType="map">
	    SELECT * FROM (
	        SELECT u.*, ROW_NUMBER() OVER (ORDER BY CREATE_DT DESC) AS rn
	        FROM USERS u
	        <where>
	            <choose>
	                <when test="searchType.equals('user_id')">
					    USER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType.equals('user_name')">
					    USERNAME LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchType.equals('email')">
					    EMAIL LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
	            </choose>
	        </where>
	    )
	    WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>

    <!-- 검색된 회원 수 조회 -->
    <select id="getSearchMemberCount" resultType="int" parameterType="map">
        SELECT COUNT(*) 
        FROM USERS
        WHERE 
        <choose>
            <when test="searchType.equals('user_id')">
               USER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
            </when>
            <when test="searchType.equals('user_name')">
			    USERNAME LIKE CONCAT('%', #{searchKeyword}, '%')
			</when>
			<when test="searchType.equals('email')">
			    EMAIL LIKE CONCAT('%', #{searchKeyword}, '%')
			</when>
            <otherwise>
                1 = 0
            </otherwise>
        </choose>
    </select>

</mapper>